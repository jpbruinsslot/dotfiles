#!/usr/bin/env bash

NOTES_DIR="$HOME/Projects/notes"
NOTES_FILE="$NOTES_DIR/notes.md"
EDITOR="$(which nvim)"

function new() {
	echo -e "## $(date --iso-8601) - $(date "+%A")\n\n* [ ] \n" | cat - $NOTES_FILE >/tmp/out && mv /tmp/out $NOTES_FILE
	edit
}

function edit() {
	$EDITOR +3 $NOTES_FILE
}

function push() {
	local date=$(awk 'NR==1 {print $2}' $NOTES_FILE)

	cd $NOTES_DIR

	git add archive
	git add notes.md

	git commit -m "$date"

	git push
}

function pull() {
	git pull
}

# Archive notes
function archive() {
	split
	archive
}

# Split notes file into individual files
function split() {
	awk '/^## [0-9]{4}-[0-9]{2}-[0-9]{2}/ {filename=sprintf("./archive/%s.md", substr($2, 1, 7)); print > filename; next} {print > filename}' $NOTES_FILE
}

# Clean notes file
function clean() {
	awk -i inplace -v month="$(date +'%Y-%m')" '
	/^## [0-9]{4}-[0-9]{2}-[0-9]{2}/ {
	  if (substr($2, 1, 7) == month) {
	    print; keep=1
	  } else {
	    keep=0
	  }
	  next
	}
	keep || !NF {
	  if (prev_line_empty && !NF) {
	    next
	  } else {
	    print
	    prev_line_empty = !NF
	  }
	}
	' $NOTES_FILE
}

# Check if the first line contains a date, and if that date is today
# If not, create a new note
function check() {
	local date1=$(date --iso-8601)
	local date2=$(awk 'NR==1 {print $2}' $NOTES_FILE)
	if [ "$date1" == "$date2" ]; then
		edit
	else
		new
	fi
}

usage() {
	echo "Usage: $0 [new|edit|push|pull|split]"
}

main() {
	local cmd="$1"

	if [[ -z "$cmd" ]]; then
		pull
		check
	fi

	case "$cmd" in
	new)
		new
		;;
	edit)
		edit
		;;
	push)
		push "$2"
		;;
	pull)
		pull
		;;
	archive)
		archive
		;;
	split)
		split
		;;
	clean)
		clean
		;;
	*)
		usage
		exit 1
		;;
	esac
}

main "$@"
