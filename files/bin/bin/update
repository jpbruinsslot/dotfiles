#!/usr/bin/env bash

# http://www.davidpashley.com/articles/writing-robust-shell-scripts/
set -o errexit
set -o pipefail

function update_apt() {
    echo ">>> Updating APT"

	apt -y update
	apt -y upgrade
	apt -y autoremove
	apt -y autoclean
	apt -y clean
	rm -rf /var/lib/apt/lists/*
}

function update_golang() {
	echo ">>> Updating Golang"

	GO_VERSION=$(curl -s https://go.dev/VERSION?m=text | grep -o 'go[0-9.]*')
	if [[ -n "$1" ]]; then
		GO_VERSION=go$1
	fi

	GOLANG=$GO_VERSION.linux-amd64

	# Removing prior version of Go
	echo "... Removing prior version of Go"
	GO_SRC=/usr/local/go
	if [[ -d "$GO_SRC" ]]; then
		sudo rm -rf "$GO_SRC"
		sudo rm -rf "$GOPATH"
	fi

	# Download
	echo "... Downloading Go $GO_VERSION"
	cd /tmp
	wget -O $GOLANG.tar.gz https://go.dev/dl/$GOLANG.tar.gz

	echo "... Installing Go $GO_VERSION"
	sudo tar -C /usr/local -xzf $GOLANG.tar.gz

	# Add binaries to path
	echo "... Adding binaries to path"
	export PATH=$PATH:/usr/local/go/bin

	cd "$HOME"
}

function update_golang_pkg()_{
    echo ">>> Updating Golang packages"
}

function update_rust() {
    echo ">>> Updating Rust"

    rustup update

	rustup completions bash  >  /etc/bash_completion.d/rustup

    rustc --version
}

function() update_neovim() {
    echo ">>> Updating Neovim"

	cd /tmp
	wget https://github.com/neovim/neovim/releases/download/stable/nvim.appimage
	chmod u+x nvim.appimage
	sudo mv nvim.appimage /usr/local/bin/nvim

	cd "$HOME"

    nvim --version
}

usage() {
	echo "update.sh"
	echo
	echo "Usage: update.sh <command>"
	echo
	echo "Commands:"
	echo "  golang"
}

main() {
	local cmd=$1

	if [[ -z "$cmd" ]]; then
		echo "Usage: $0 <command>"
		exit 1
	fi

    if [[ $cmd == "golang" ]]; then
        update_golang
    elif [[ $cmd == "rust" ]]; then
        update_rust
    elif [[ $cmd == "neovim" ]]; then
        update_neovim
    else
        usage
    fi
}

main "$@"
