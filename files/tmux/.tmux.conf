# Helpful sources:
# - http://www.hamvocke.com/blog/a-guide-to-customizing-your-tmux-conf/
# - https://learnxinyminutes.com/docs/tmux/
# - https://wiki.archlinux.org/index.php/tmux
# - http://www.nerdyweekly.com/posts/enable-italic-text-vim-tmux-gnome-terminal/
# - http://homeonrails.com/2016/05/truecolor-in-gnome-terminal-tmux-and-neovim/
# - https://github.com/tmux/tmux/issues/696

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

# set terminal
set -g default-terminal "xterm-256color-italic"

# overrides default terminal
#
# $ tmux info | grep Tc
#
# You have true color support when 'Tc' is not missing. When you have done
# everything correct but it is still missing. Make sure that your terminal
# is using "xterm-256color-italic". Otherwise the colors in neovim will be
# off.
set-option -ga terminal-overrides ",xterm-256color-italic:Tc"

# set cursor style 
set-option -g cursor-style blinking-block

# status bar config
set -g status-left "#(~/bin/host.sh)  #h: [#S] "
set -g status-left-length 50
set -g status-right-length 100
set -g status-right "#(~/bin/battery.sh)  #(~/bin/netinfo.sh --no-ip) | #(~/bin/load.sh) | #(weather | python3 ~/bin/ansi-to-tmux.py) | #(~/bin/clock.sh) %H:%M %d-%m-%Y"

# disable automatic window renaming
set-window-option -g automatic-rename off

# Get available tmux colors with the following script:
#
# #!/usr/bin/env bash
# for i in {0..255} ; do
#     printf "\x1b[38;5;${i}mcolour${i}\n"
# done

# attr options:
# bright (or bold), dim, underscore, blink, reverse, hidden, or italics.
#
# status bar colours
set-option -g status-style bg=colour237
set-option -g status-style fg=colour255
set-option -g status-style default

# statusbar format selected window
setw -g window-status-current-format " #I #W "

# status bar selected window colours
set-window-option -g window-status-current-style bg=colour237
set-window-option -g window-status-current-style fg=colour255
set-window-option -g window-status-current-style bold

# status bar unselected window
setw -g window-status-format " #I #W "

# statusbar unselected window colours
set-window-option -g window-status-style bg=colour237
set-window-option -g window-status-style fg=colour242
set-window-option -g window-status-style default

# pane border colours
set-option -g pane-border-style fg=colour8
set-option -g pane-active-border-style fg=colour8

# window mode
# setw -g mode-bg colour6
# setw -g mode-fg colour0

# listen to alerts from all windows
set -g bell-action any

# disable a visual bell (the orange status bar)
set-option -g visual-bell off

# alerting colours
setw -g window-status-bell-style fg=colour255
setw -g window-status-bell-style bg=default
setw -g window-status-bell-style bold

# messaging
set -g message-style fg=black
set -g message-style bg=yellow
set -g message-command-style fg=blue
set -g message-command-style bg=black

# vim movement bindings
set -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# select window
bind -n C-0 select-window -t 0
bind -n C-1 select-window -t 1
bind -n C-2 select-window -t 2
bind -n C-3 select-window -t 3
bind -n C-4 select-window -t 4
bind -n C-5 select-window -t 5
bind -n C-6 select-window -t 6
bind -n C-7 select-window -t 7
bind -n C-8 select-window -t 8
bind -n C-9 select-window -t 9

# esc to enter copy mode
unbind [
bind Escape copy-mode

# vim like copy/paste, and use xclip to copy text to clipboard
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "xclip -i -sel clip > /dev/null"
bind-key p run "xclip -o -sel clip | tmux load-buffer - ; tmux paste-buffer"

# resize panes
bind -r h resize-pane -L 5
bind -r j resize-pane -D 5
bind -r k resize-pane -U 5
bind -r l resize-pane -R 5

# prepend new windows with icon
bind-key c new-window -n ' '

# browse urls inside tmux, requires urlview
bind-key u capture-pane \; save-buffer /tmp/tmux-buffer \; new-window -n "" '$SHELL -c "urlview < /tmp/tmux-buffer"'

# No delay for escape key press
set -s escape-time 0

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Display popups
bind-key g display-popup
