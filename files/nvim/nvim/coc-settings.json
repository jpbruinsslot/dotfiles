// :messages
// :CocInfo
{
    "suggest.completionItemKindLabels": {
        "keyword": "\uf1de",
        "variable": "\ue79b",
        "value": "\uf89f",
        "operator": "\u03a8",
        "function": "\u0192",
        "reference": "\ufa46",
        "constant": "\uf8fe",
        "method": "\uf09a",
        "struct": "\ufb44",
        "class": "\uf0e8",
        "interface": "\uf417",
        "text": "\ue612",
        "enum": "\uf435",
        "enumMember": "\uf02b",
        "module": "\uf40d",
        "color": "\ue22b",
        "property": "\ue624",
        "field": "\uf9be",
        "unit": "\uf475",
        "event": "\ufacd",
        "file": "\uf723",
        "folder": "\uf114",
        "snippet": "\ue60b",
        "typeParameter": "\uf728",
        "default": "\uf29c"
    },
    "codeLens.enable": true,
    "codeLens.separator": "‣",
    "diagnostic.errorSign": "",
    "diagnostic.warningSign": "",
    "diagnostic.infoSign": "",
    "diagnostic.hintSign": "",
    "coc.preferences.extensionUpdateCheck": "daily",
    "coc.preferences.formatOnType": true,
    "coc.preferences.formatOnSaveFiletypes": [
        "python",
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
        "json",
        "go",
        "c",
        "rust",
        "css",
        "markdown",
        "html"
    ],
    // coc-diagnostic (https://github.com/iamcco/coc-diagnostic)
    "diagnostic-languageserver.enable": true,
    "diagnostic-languageserver.mergeConfig": true,
    "diagnostic-languageserver.filetypes": {
        "python": [
            "flake8",
            "pylint",
            "mypy"
        ],
        "c": [
            "clang-tidy"
        ],
        "go": [
            "golangci-lint"
        ]
    },
    "diagnostic-languageserver.formatFiletypes": {
        "python": [
            "black",
            "isort"
        ],
        "c": "clang-format"
    },
    "diagnostic-languageserver.formatters": {
        "clang-format": {
            "command": "clang-format",
            "args": [
                "-style={BasedOnStyle: llvm, IndentWidth: 4, AllowShortFunctionsOnASingleLine: None, KeepEmptyLinesAtTheStartOfBlocks: false}"
            ]
        }
    },
    "diagnostic-languageserver.linters": {
        "mypy": {
            "command": "mypy",
            "args": [
                "--ignore-missing-imports",
                "--follow-imports=skip",
                "--no-error-summary",
                "--no-strict-optional",
                "--no-warn-no-return",
                "--no-warn-redundant-return",
                "--no-warn-unused-ignores",
                "--no-warn-unused-variables",
                "--no-warn-unused-function",
                "--no-warn-unused-import",
                "--no-warn-unused-wildcard-import",
                "--no-warn-unused-loop-variable"
            ]
        },
        "clang-tidy": {
            "command": "clang-tidy-11"
        },
        "golangci-lint": {
            "command": "golangci-lint",
            "rootPatterns": [
                ".git",
                "go.mod"
            ],
            "debounce": 100,
            "args": [
                "run",
                "--out-format",
                "json"
            ],
            "sourceName": "golangci-lint",
            "parseJson": {
                "sourceName": "Pos.Filename",
                "sourceNameFilter": true,
                "errorsRoot": "Issues",
                "line": "Pos.Line",
                "column": "Pos.Column",
                "message": "${Text} [${FromLinter}]"
            }
        }
    },
    // coc-explorer (https://github.com/weirongxu/coc-explorer)
    "explorer.width": 30,
    "explorer.icon.enableNerdfont": true,
    "explorer.keyMappingMode": "none",
    "explorer.buffer.root.template": "[icon & 1] BUFFER",
    "explorer.file.root.template": "[icon & 1] PROJECT ([root])",
    "explorer.file.child.template": "[git | 2] [selection | clip | 1] [indent][icon | 1] [diagnosticError & 1][filename omitCenter 1][modified][readonly] [linkIcon & 1][link growRight 1 omitCenter 5]",
    "explorer.keyMappings.global": {
        "s": "toggleSelection",
        "<leader>": "actionMenu",
        "h": "indentPrev",
        "l": "indentNext",
        "<cr>": [
            "expandable?",
            [
                "expanded?",
                "collapse",
                "expand"
            ],
            "open"
        ],
        "o": "open",
        "t": "open:tab",
        "<bs>": "gotoParent",
        "Y": "copyFilepath",
        "y": "copyFilename",
        "c": "copyFile",
        "x": "cutFile",
        "p": "pasteFile",
        "d": "delete",
        "D": "deleteForever",
        "a": "addFile",
        "A": "addDirectory",
        "r": "rename",
        ".": "toggleHidden",
        "R": "refresh",
        "<C-p>": "preview",
        "?": "help",
        "<esc>": "esc",
        "e": "systemExecute",
        "f": "searchRecursive",
        "gf": "gotoSource:file",
        "gb": "gotoSource:buffer",
        "gk": "gitPrev",
        "gj": "gitNext",
        "ga": "gitStage",
        "gu": "gitUnstage"
    },
    "explorer.git.enable": true,
    "explorer.git.icon.status.added": "",
    "explorer.git.icon.status.modified": "",
    "explorer.git.icon.status.renamed": "",
    "explorer.git.icon.status.deleted": "",
    "explorer.git.icon.status.untracked": "★",
    "explorer.git.icon.status.unmerged": "",
    // javascript: coc-tsserver (https://github.com/neoclide/coc-tsserver)
    "tsserver.formatOnType": true,
    // javascript: coc-eslint (https://github.com/neoclide/coc-eslint)
    "eslint.run": "onType",
    "eslint.format.enable": true,
    "eslint.autoFixOnSave": true,
    // go: coc-go (https://github.com/josa42/coc-go)
    "go.goplsOptions": {
        "gofumpt": true,
        "staticcheck": true
    },
    "languageserver": {
        // docker (https://github.com/rcjsuen/dockerfile-language-server-nodejs)
        "dockerfile": {
            "command": "docker-langserver",
            "filetypes": [
                "dockerfile"
            ],
            "args": [
                "--stdio"
            ]
        },
        //terraform (https://github.com/juliosueiras/terraform-lsp)
        "terraform": {
            "command": "terraform-lsp",
            "filetypes": [
                "terraform"
            ],
            "initializationOptions": {}
        }
    },
    "clangd.arguments": [
        "--clang-tidy"
    ],
    "clangd.path": "~/.config/coc/extensions/coc-clangd-data/install/13.0.0/clangd_13.0.0/bin/clangd"
}
